From c7393c703f555279c2a1668e3e4b08b96935f90f Mon Sep 17 00:00:00 2001
From: Michael Rehn <rehn.michael@outlook.com>
Date: Fri, 5 Oct 2018 09:14:57 +0200
Subject: [PATCH 1/2] Fixed so that you can only remove stones outside mills
 (if there's any)

---
 GamePlatform/GameBoard.py       | 15 +++++++++++++++
 GamePlatform/StdinController.py | 15 +++++++++++----
 2 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/GamePlatform/GameBoard.py b/GamePlatform/GameBoard.py
index 2d56df1..f9a23ab 100644
--- a/GamePlatform/GameBoard.py
+++ b/GamePlatform/GameBoard.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 from __future__ import print_function
 from GamePlatform.BoardSlot import BoardSlot
+from GamePlatform.Move import Move
+from GamePlatform.GameRules import detect_mill
 
 board_layout = """
 x--x--x
@@ -96,3 +98,16 @@ class GameBoard:
             if slot.owner == player:
                 player_slots.append(slot)
         return player_slots
+
+    def get_player_slots_outside_mills(self, player):
+        slots_outside_mills = []
+        for pos in self.board:
+            slot = self.board[pos]
+            if slot.owner == player:
+                # Detect mill requires a 'move' class
+                move = Move(player, slot, None)
+                # If we detected 0 mills,
+                # then this slot is outside an mill
+                if detect_mill(self, move) == 0:
+                    slots_outside_mills.append(slot)
+        return slots_outside_mills
diff --git a/GamePlatform/StdinController.py b/GamePlatform/StdinController.py
index e5e974a..0238a28 100644
--- a/GamePlatform/StdinController.py
+++ b/GamePlatform/StdinController.py
@@ -61,13 +61,20 @@ class StdinController(Controller):
             selected_slot = self.get_input_slot(
                 board, "You got a mill! Select a stone to remove")
             slot_owner = selected_slot.owner
-            if slot_owner is not None and slot_owner is not self.player:
-                move = Move(self.player, None, selected_slot)
-                is_valid_input = True
-            else:
+
+            slots_outside_mills = board.get_player_slots_outside_mills(
+                slot_owner)
+
+            if slot_owner is None or slot_owner is self.player:
                 print(
                     "\033[31mYou have to select one of your opponents stones\u001b[0m"
                 )
+            elif len(slots_outside_mills) > 0 and selected_slot not in slots_outside_mills:
+                print("\033[31mYou have to remove stones not in a mill "
+                      "before you remove stones inside a mill\u001b[0m")
+            else:
+                move = Move(self.player, None, selected_slot)
+                is_valid_input = True
 
         self.perform_move(board, move)
         return move
-- 
2.19.0.windows.1

